NEW
  AUTO 3,1
*--------------------------------------
*************************************************************************  
* APPLE /// SOS 1.3 SOURCE CODE FILE: EQUATES  
*************************************************************************  
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT  
				 
*  
ENTRY			 BFMGR  
*  
* BFM INITIALIZATION ENTRIES  
* (INIT CODE FOUND IN INIT.SRC)  
*  
ENTRY			 BFMFCB1 ; FCB PAGE 1 ADDR  
ENTRY			 BFMFCB2 ; AND PAGE 2  
ENTRY			 FCBZPP  
ENTRY			 SISTER  
ENTRY			 PATHBUF  
ENTRY			 VCB  
ENTRY			 WORKSPC  
ENTRY			 PFIXPTR  
ENTRY			 BMAPAGE  
ENTRY			 BMBPAGE  
ENTRY			 FCBADDRH  
ENTRY			 BMAMADR  
ENTRY			 BMBMADR  
*  
*  
EXTRN			 LEVEL ; FILE LEVEL (LOW BYTE)  
EXTRN			 OPMSGRPLY ; OPERATOR MESSAGE  
EXTRN			 DATETIME ; THANKS TOM...  
EXTRN			 DMGR ; THANKS BOB...  
				EXTRN REQBUF ; "  
				EXTRN REQFXBUF ; "  
				EXTRN GETBUFADR ; "  
				EXTRN RELBUF ; "  
				EXTRN BLKDLST ; "  
				EXTRN SERR    
				EXTRN BACKMASK    
*      
* ERRORS      
*      
				EXTRN SYSERR    
*      
				EXTRN BADPATH ; INVALID PATHNAME SYNTAX  
				EXTRN FCBFULL ; FILE CONTROL BLOCK FULL  
				EXTRN BADREFNUM ; INVALID REFNUM  
				EXTRN PATHNOTFND ; PATHNAME NOT FOUND  
				EXTRN VNFERR ; VOLUME NOT FOUND  
				EXTRN FNFERR ; FILE NOT FOUND  
				EXTRN DUPERR ; DUPLICATE FILE NAME ERROR  
				EXTRN DUPVOL ; DUPLICATE VOLUME CAN'T BE LOGGED IN.  
				EXTRN OVRERR ; NOT ENOUGH DISK SPACE FOR PREALLOCATION  
				EXTRN DIRFULL ; DIRECTORY FULL ERROR  
				EXTRN CPTERR ; FILE INCOMPATIBLE SOS VERSION  
				EXTRN TYPERR ; NOT CURRENTLY SUPPORTED FILE TYPE  
				EXTRN EOFERR ; POSITION ATTEMPTED BEYOND END OF FILE  
				EXTRN POSNERR ; ILLEGAL POSITION (L.T. 0 OR G.T. $FFFFFF)  
				EXTRN ACCSERR ; FILE ACCESS R/W REQUEST CONFLICTS WITH ATTRIBUTES.  
				EXTRN BTSERR ; USER SUPPLIED BUFFER TOO SMALL  
				EXTRN FILBUSY ; EITHER WRITE WAS REQUESTED OR WRITE ACCESS ALREADY ALLOCATED.  
				EXTRN NOTSOS ; NOT A SOS DISKETTE  
				EXTRN BADLSTCNT ; INVALID VALUE IN LIST PARAMETER  
				EXTRN XDISKSW ; DISK SWITCHED  
				EXTRN NOTBLKDEV ; NOT A BLOCK DEVICE  
				EXTRN XNOWRITE ; DISK/MEDIA IS HARDWARE WRITE PROTECTED  
				EXTRN XIOERROR ; INFORMATION ON BLOCK DEVICE NOT ACCESSABLE  
				EXTRN DIRERR ; DIRECTORY ENTRY COUNT INCONSISTENT WITH ACTUAL ENTRIES  
				EXTRN BITMAPADR ; BIT MAP DISK ADDRESS IMPOSSIBLE  
*      
* FATAL ERRORS      
*      
				EXTRN SYSDEATH    
*      
				EXTRN VCBERR ; VOLUME CONTROL BLOCK NOT USABLE  
				EXTRN ALCERR ; ALLOCATION BLOCKS INVALID  
				EXTRN TOOLONG ; PATHNAME BUFFER OVERFLOW  
				PAGE     
*   
* CONSTANTS   
*   
DLIMIT			 EQU $2F ; DELIMITER IS CURRENTLY AN ASCII '/'  
SEEDTYP			 EQU 1   
SAPTYP			 EQU 2   
TRETYP			 EQU 3   
DIRTYP			 EQU $D   
HEDTYP			 EQU $E   
RDCMD			 EQU $0   
WRTCMD			 EQU $1   
RPTCMD			 EQU $9   
STATCMD			 EQU $02 ; REQUEST STATUS OF BLOCK DEVICE. (BIT 0 = WRITE PROTECTED)  
STATSUB			 EQU $0   
PRETIME			 EQU $20 ; COMMAND NEEDS CURRENT DATE/TIME STAMP  
PREREF			 EQU $40 ; COMMAND REQUIRES FCB ADDRESS AND VERIFICATION  
PREPATH			 EQU $80 ; COMMAND HAS PATHNAME TO PREPROCESS  
SISTER			 EQU $1400   
*     
* VOLUME STATUS CONSTANTS (BITS)   
*   
DSWITCH			 EQU $40 ; FOR DISK SWITCHED ERROR RECOVERY.  
*   
* FILE STATUS CONSTANTS   
*   
DATALC			 EQU $1 ; DATA BLOCK NOT ALLOCATED.  
IDXALC			 EQU $2 ; INDEX NOT ALLOCATED  
TOPALC			 EQU $4 ; TOP INDEX NOT ALLOCATED  
STPMOD			 EQU $8 ; STORAGE TYPE MODIFIED  
USEMOD			 EQU $10 ; FILE USAGE MODIFIED  
EOFMOD			 EQU $20 ; END OF FILE MODIFIED  
DATMOD			 EQU $40 ; DATA BLOCK MODIFIED  
IDXMOD			 EQU $80 ; INDEX BLOCK MODIFIED  
FCBMOD			 EQU $80 ; HAS FCB/DIRECTORY BEEN MODIFIED? (FLUSH)  
*   
* FILE ATTRIBUTES CONSTANTS   
*   
READEN			 EQU $1 ; READ ENABLED  
WRITEN			 EQU $2 ; WRITE ENABLED  
NLINEN			 EQU $10 ; NEW LINE ENABLED  
BKBITVAL		 EQU $20 ; FILE NEEDS BACKUP IF SET (BKBITFLG)  
RENAMEN			 EQU $40 ; RENAME OK WHEN ON.  
DSTROYEN		 EQU $80 ; DESTROY OK WHEN ON.  
PAGE			   
* HEADER INDEX CONSTANTS   
*   
HNLEN			 EQU $0 ; HEADER NAME LENGTH (OFFSET INTO HEADER)  
*HNAME EQU $1 ; HEADER NAME   
HPENAB			 EQU $10 ; PASSWORD ENABLE BYTE  
HPASS			 EQU $11 ; ENCODED PASSWORD  
HCRDT			 EQU $18 ; HEADER CREATION DATE  
* HCRTM EQU $1A ; HEADER CREATION TIME   
HVER			 EQU $1C ; SOS VERSION THAT CREATED DIRECTORY  
HCMP			 EQU $1D ; BACKWARD COMPATIBLE WITH SOS VERSION  
HATTR			 EQU $1E ; HEADER ATTRIBUTES- PROTECT ETC.  
* HENTLN EQU $1F ; LENGTH OF EACH ENTRY 000133 * HMENT EQU $20 ; MAXIMUM NUMBER OF ENTRIES/BLOCK  
HCENT			 EQU $21 ; CURRENT NUMBER OF FILES IN DIRECTORY  
HRBLK			 EQU $23 ; OWNER'S DIRECTORY ADDRESS  
HRENT			 EQU $25 ; OWNER'S DIRECTORY ENTRY NUMBER  
HRELN			 EQU $26 ; OWNER'S DIRECTORY ENTRY LENGTH  
VBMAP			 EQU HRBLK   
VTBLK			 EQU HRENT ; (USED FOR ROOT DIRECTORY ONLY)  
*     
* VOLUME CONTROL BLOCK INDEX CONSTANTS  
*  
VCBSIZE			 EQU $20 ; CURRENT VCB IS 32 BYTES PER ENTRY (VER 0)  
VCBNML			 EQU 0 ; VOLUME NAME LENGTH BYTE  
VCBNAM			 EQU 1 ; VOLUME NAME  
VCBDEV			 EQU $10 ; VOLUME'S DEVICE  
VCBSTAT			 EQU $11 ; VOLUME STATUS. (80=FILES OPEN. 40=DISK SWITCHED.)  
VCBTBLK			 EQU $12 ; TOTAL BLOCKS ON THIS VOLUME  
VCBTFRE			 EQU $14 ; NUMBER OF UNUSED BLOCKS  
VCBROOT			 EQU $16 ; ROOT DIRECTORY (DISK) ADDRESS  
*VCBMORG EQU $18 ; MAP ORGANIZATION (NOT SUPPORTED BY V 0)  
*VCBMBUF EQU $19 ; BIT MAP BUF NUM  
VCBDMAP			 EQU $1A ; FIRST (DISK) ADDRESS OF BITMAP(S)  
VCBCMAP			 EQU $1C ; RELATIVE ADDRESS OF BIT MAP WITH SPACE (ADD TO VCBDMAP)  
*VCBMNUM EQU $1D ; RELATIVE BIT MAP CURRENTLY IN MEMORY  
VCBOPNC			 EQU $1E ; CURRENT NUMBER OF OPEN FILES.  
ADR/16			 VCBSWAP EQU $1F ; $8X IF VOLUME SWAPPED; $00 IF UNSWAPPED WHERE X=LOW ORDER BYTE OF VCB  
*   
* FILE CONTROL BLOCK INDEX CONSTANTS   
*   
FCBREFN			 EQU 0 ; FILE REFERENCE NUMBER (POSITION SENSITIVE)  
FCBDEVN			 EQU 1 ; DEVICE (NUMBER) ON WHICH FILE RESIDES  
*FCBHEAD EQU 2 ; BLOCK ADDRESS OF FILE'S DIRECTORY HEADER 000164 *FCBDIRB EQU 4 ; BLOCK ADDRESS OF FILE'S DIRECTORY  
FCBENTN			 EQU 6 ; ENTRY NUMBER WITHIN DIRECTORY BLOCK  
FCBSTYP			 EQU 7 ; STORAGE TYPE - SEED, SAPLING, TREE, ETC.  
FCBSTAT			 EQU 8 ; STATUS - INDEX/DATA/EOF/USAGE/TYPE MODIFIED.  
FCBATTR			 EQU 9 ; ATTRIBUTES - READ/WRITE ENABLE, NEWLINE ENABLE.  
FCBNEWL			 EQU $A ; NEW LINE TERMINATOR (ALL 8 BITS SIGNIFICANT).  
FCBBUFN			 EQU $B ; BUFFER NUMBER  
FCBFRST			 EQU $C ; FIRST BLOCK OF FILE  
FCBIDXB			 EQU $E ; BLOCK ADDRESS OF INDEX (0 IF NO INDEX)  
FCBDATB			 EQU $10 ; BLOCK ADDRESS OF DATA  
FCBMARK			 EQU $12 ; CURRENT FILE MARKER.  
FCBEOF			 EQU $15 ; LOGICAL END OF FILE.  
FCBUSE			 EQU $18 ; ACTUAL NUMBER OF BLOCKS ALLOCATED TO THIS FILE.  
FCBSWAP			 EQU $1A ; $8N = SWAPPED, $00 = UNSWAPPED VOLUME ("N" = VCB ENTRY NUMBER)  
FCBLEVL			 EQU $1B ; LEVEL AT WHICH THIS FILE WAS OPENED  
FCBDIRTY		 EQU $1C ; FCB MARKED AS MODIFIED  
				PAGE    
*  
* ZERO PAGE STUFF  
*  
PAR				 EQU $A0   
COMMAND			 EQU PAR   
C.DNAMP			 EQU PAR+1   
C.PATH			 EQU PAR+1   
C.REFNUM		 EQU PAR+1   
C.ISNEWL		 EQU PAR+2   
C.OUTEOF		 EQU PAR+2   
C.BASE			 EQU PAR+2   
C.MRKPTR		 EQU PAR+2   
C.OUTBUF		 EQU PAR+2   
C.NWPATH		 EQU PAR+3   
C.FILIST		 EQU PAR+3   
C.NEWL			 EQU PAR+3   
C.OUTVOL		 EQU PAR+3   
C.OUTREF		 EQU PAR+3   
C.XLIST			 EQU PAR+3   
C.MAXPTH		 EQU PAR+3   
C.MARK			 EQU PAR+3   
C.NEWEOF		 EQU PAR+3   
C.BYTES			 EQU PAR+4   
C.FILSTLN		 EQU PAR+5   
C.OUTBLK		 EQU PAR+5   
C.OPLIST		 EQU PAR+5   
C.XLEN			 EQU PAR+5   
C.FILID			 EQU PAR+6   
C.OUTCNT		 EQU PAR+6   
C.OPLSTLN		 EQU PAR+7   
C.AUXID			 EQU PAR+7   
C.STOR			 EQU PAR+9   
C.EOFLL			 EQU PAR+$A   
C.EOFLH			 EQU PAR+$B   
C.EOFHL			 EQU PAR+$C   
DEBUPTR			 EQU PAR+$D ; NOTE SAME AS BELOW  
C.EOFHH			 EQU PAR+$D   
* C.SPARE EQU PAR+$E 000219 *  
DEVICE			 EQU $C0   
DHPCMD			 EQU DEVICE   
UNITNUM			 EQU DEVICE+1   
DSTATREQ		 EQU DEVICE+2   
DBUFPL			 EQU DEVICE+2   
DBUFPH			 EQU DBUFPL+1   
DSTATBFL		 EQU DEVICE+3 ; TO PASS BACK BUSY, WRITE PROTECT, READ PROTECT.  
DSTATBFH		 EQU DSTATBFL+1   
RQCNTL			 EQU DEVICE+4   
RQCNTH			 EQU RQCNTL+1   
BLOKNML			 EQU DEVICE+6   
BLOKNMH			 EQU BLOKNML+1   
BRDPTR			 EQU DEVICE+8 ; (AND 9)  
*     
DVNAMP			 EQU DEVICE+1 ; USED FOR 'VOLUME' TO CALL  
DVDNUM			 EQU DEVICE+3 ; 'GET.DNUM' IN DEVICE MANAGER.  
*     
SISBPH			 EQU SISTER+DBUFPH   
SISDSTAT		 EQU SISTER+DSTATBFH   
SSBRDPH			 EQU SISTER+BRDPTR+1   
*     
				PAGE    
*     
* ZERO PAGE TEMPORARIES    
*     
ZTEMPS			 EQU $B0   
PATHNML			 EQU ZTEMPS   
PATHNMH			 EQU PATHNML+1   
USRBUF			 EQU ZTEMPS   
TPATH			 EQU ZTEMPS+2   
WRKPATH			 EQU ZTEMPS+4   
TINDX			 EQU ZTEMPS+2   
DRBUFPL			 EQU ZTEMPS+4   
DRBUFPH			 EQU DRBUFPL+1   
VCBPTR			 EQU ZTEMPS+6   
BMADR			 EQU ZTEMPS+8   
FCBPTR			 EQU ZTEMPS+$A   
DATPTR			 EQU ZTEMPS+$C   
POSPTR			 EQU ZTEMPS+$E   
*     
MAXTEMPS		 EQU $F   
SISTEMPS		 EQU SISTER+ZTEMPS   
SSTIDXH			 EQU SISTER+TINDX+1   
SISPATH			 EQU SISTER+C.PATH+1   
SSNWPATH		 EQU SISTER+C.NWPATH+1   
SISUSRBF		 EQU SISTER+USRBUF+1   
SISOUTBF		 EQU SISTER+C.OUTBUF+1   
SISTPATH		 EQU SISTER+TPATH+1   
SISBMADR		 EQU SISTER+BMADR+1   
SISFCBP			 EQU SISTER+FCBPTR+1   
SISDATP			 EQU SISTER+DATPTR+1   
SISPOSP			 EQU SISTER+POSPTR+1   
*     
*     
* ADDRESSES     
*     
PATHBUF			 EQU $1000 ; NOTE: THIS IS $100 BYTES LONG.  
VCB				 EQU $1100   
GBUF			 EQU $1200 ; THRU $13FF  
*     
* INITIALIZATION EQUATES    
*    
BFMFCB1			 EQU $1C ; FCB PAGE 1 ADDR  
BFMFCB2			 EQU $1D ; FCB PAGE 2 ADDR  
BMAPAGE			 EQU <$B800 ; BIT MAP A ADDR  
BMBPAGE			 EQU <$BA00 ; BIT MAP B ADDR  
FCBZPP			 EQU FCBPTR   
*    
*    
*    
PAGE			    
DSECT			    
ORG				 $0 ; (THE FOLLOWING DO NOT NEED TO BE ON ZERO PAGE. 7/16/80 JRH.)  
DATBLKL			 DS 1   
DATBLKH			 DS 1   
IDXADRL			 DS 1 ; DISK ADDRESS OF INDEX BLOCK  
IDXADRH			 DS 1   
REQL			 DS 1   
REQH			 DS 1   
INDXBLK			 DS 1   
LEVELS			 DS 1   
TOTENT			 DS 1   
ENTCNTL			 DS 1   
ENTCNTH			 DS 1   
CNTENT			 DS 1   
NOFREE			 DS 1   
BMCNT			 DS 1   
SAPTR			 DS 1   
TREPTR			 DS 1   
TLINK			 DS 2   
FLINK			 DS 2   
PATHCNT			 DS 1   
PFIXPTR			 DS 2   
BMPTR			 DS 1   
BASVAL			 DS 1   
HALF			 DS 1   
*    
*    
PAGE			  
*  
* BIT MAP INFO TABLES (A & B)  
*  
BMTABSZ			 EQU $6   
BMTAB			 DS 1   
BMBUFBNK		 DS 1   
BMASTAT			 DS 1   
BMADEV			 DS 1   
BMAMADR			 DS 1   
BMADADR			 DS 2   
BMACMAP			 DS 1 ; SIMILAR TO VCBCMAP  
BMBSTAT			 DS 1   
BMBDEV			 DS 1   
BMBMADR			 DS 1   
				DS 2 ; BMBDADR  
				DS 1 ; BMBCMAP  
*     
FCBADDRH		 DS 1 ; FILE CONTROL BLOCK'S BUFFER ADDRESS.  
FCBANKNM		 DS 1 ; AND BANK (SISTER PAGE) BYTE.  
TPOSLL			 DS 1   
TPOSLH			 DS 1   
TPOSHI			 DS 1   
RWREQL			 DS 1   
RWREQH			 DS 1   
BULKCNT			 DS 1   
NLCHAR			 DS 1   
NPATHDEV		 DS 3 ; FOR NEW PATHNAME DEVICE AND DIRECTORY HEADER ADDRESS  
IOACCESS		 DS 1 ; USED TO DETERMINE IF A CALL HAS BEEN MADE TO THE DISK DEVICE HANDLER  
DEVNUM			 DS 1 ; CURRENT DEVICE TO BE ACCESSED.  
TOTDEVS			 DS 1 ; USED FOR ACCESSING DRIVES IN NUMERIC ORDER  
CMDTEMP			 DS 1 ; USED FOR TESTING REFNUM, TIME, AND DSKSWTCH (PRE)PROCESSING.  
DATELO			 DS 1 ; DATE AND TIME MUST RESIDE ON ZERO PAGE.  
DATEHI			 DS 1   
TIMELO			 DS 1   
TIMEHI			 DS 1   
*     
DUPLFLAG		 DS 1 ; USED FOR DIFFERENCE BETWEEN VNFERR AND DUPVOL BY SYNPATH  
ZPGTEMP			 DS 1 ; A ONE-BYTE UNSTABLE TEMPORARY  
VCBENTRY		 DS 1 ; POINTER TO CURRENT VCB ENTRY  
*     
				DEND    
*     
				CHN PATH,4,1   
				    
*************************************************************************  
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: EQUATES  
*************************************************************************  
				 
*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.13\sos.s.equates.txt
LOAD /A3OSX.BUILD/SOS.13/sos.s
ASM

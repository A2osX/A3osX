NEW
  AUTO 3,1
*--------------------------------------
*************************************************************************  
* APPLE /// SOS 1.3 SOURCE CODE FILE: DISK3.SRC  
*************************************************************************  
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT  
				 
SBTL			 'SOS 1.1 DISK /// DRIVER'  
TEST			 EQU 0 ;FOR FUNNY-MODE TESTING  
INCLUDE			 SOSORG,6,1,254  
DO				 TEST  
ORG				 $2000  
ELSE			  
REL				  
ORG				 ORGDISK3  
FIN				  
ZZORG			 EQU *  
CHR				 '-'  
MSB				 OFF  
*  
REP				 40  
* COPYRIGHT (C) APPLE COMPUTER INC.  
* ALL RIGHTS RESERVED  
REP				 40  
*  
REV0ROM			 EQU 0 ;1=SUPPORT REV0 ROM  
*  
DO				 1-TEST  
ENTRY			 DIB1 ;DIB1  
ENTRY			 DIB2 ;DIB2  
ENTRY			 DIB3 ;DIB3  
ENTRY			 DIB4 ;DIB4  
ENTRY			 SEEKDSK3 ;SEEK CURRENT DRIVE  
*  
EXTRN			 SYSERR  
*  
EXTRN			 XREQCODE  
EXTRN			 XBADOP  
EXTRN			 XNODRIVE  
EXTRN			 XIOERROR  
EXTRN			 XNOWRITE  
EXTRN			 XBYTECNT  
EXTRN			 XBLKNUM  
EXTRN			 XDISKSW  
EXTRN			 XCTLCODE  
*  
EXTRN			 E1908 ; GLOBAL FLAG FOR MOUSE DRIVER  
* TO SAY WE CANNOT BE INTERRUPTED  
*  
ELSE			  
XREQCODE		 EQU $20  
XBADOP			 EQU $26  
XNODRIVE		 EQU $28  
XIOERROR		 EQU $27  
XNOWRITE		 EQU $2B  
XBYTECNT		 EQU $2C  
XBLKNUM			 EQU $2D  
XDISKSW			 EQU $2E  
XCTLCODE		 EQU $21  
FIN				  
PAGE			  
* DISK /// CONTROLLER EQUATES:  
*  
* MOTOR SELECT BITS:  
*  
* DRIVE INT EXT1 EXT2  
* ----- --- ---- ----  
* .D1 1 X X  
* .D2 X 0 1  
* .D3 X 1 0  
* .D4 X 1 1  
*  
MS.INT			 EQU $C0D4 ;MOTOR SELECT:INTERNAL DRIVE  
MD.INT			 EQU $C0D5 ;MOTOR DESELECT:INTERNAL DRIVE  
*  
MS.EXT1			 EQU $C0D3 ;MOTOR SELECT:EXTERNAL DRIVE  
MS.EXT2			 EQU $C0D1 ;MOTOR SELECT:EXTERNAL DRIVE  
MD.EXT1			 EQU $C0D2 ;MOTOR DESELECT:EXTERNAL DRIVE  
MD.EXT2			 EQU $C0D0 ;MOTOR DESELECT:EXTERNAL DRIVE  
*     
IS.INT			 EQU $C0EA ;I/O SELECT:INTERNAL DRIVE  
IS.EXT			 EQU $C0EB ;I/O SELECT:EXTERNAL DRIVE  
*     
NOSCROLL		 EQU $C0D8 ;SMOOTHSCROLL OFF  
*     
MOTOROFF		 EQU $C0E8 ;MOTOR(S) START POWEROFF T/O  
MOTORON			 EQU $C0E9 ;MOTOR(S) POWER ON  
Q6L				 EQU $C08C ;Q7L,Q6L=READ  
Q6H				 EQU $C08D ;Q7L,Q6H=SENSE WPROT  
Q7L				 EQU $C08E ;Q7H,Q6L=WRITE  
Q7H				 EQU $C08F ;Q7H,Q6H=WRITE STORE  
*     
* OTHER EQUATES:     
*     
E.REG			 EQU $FFDF ;ENVIRONMENT REGISTER  
E.IER			 EQU $FFEE ;INTERRUPT ENABLE REGISTER  
*     
* RETRY COUNTERS:    
*    
R.RECAL			 EQU 1 ;MAX RECALIBRATES  
* R.RECAL MUST NOT BECOME ZERO! (MOUSE WILL BE LOCKED OUT) 000100 * SEE DISK3.SIO.SRC LINE 14 FOR DETAIL  
R.FIND			 EQU 3 ;MAX REVS TO FIND A SECTOR  
R.IOERR			 EQU 4 ;MAX RETRIES ON READ ERROR  
R.IRQ			 EQU 6 ;MAX IRQ'S TOLERATED BEFORE SEI  
				PAGE    
* ZPAGE EQUATES FOR CORE ROUTINES:  
*  
DSECT			  
				ORG $81   
IBSLOT			 DS 1 ;SLOT=$60 FOR RTNS  
				DS 7 ;N/A  
				DS 1 ;RDADR:CHECKSUM  
				DS 1 ;N/A  
IMASK			 DS 1 ;BIT7 SET IF IRQ ALLOWED  
CURTRK			 DS 1 ;SEEK:CURRENT TRACK  
				DS 2 ;N/A  
INTRTRY			 DS 1 ;READ: IRQ RETRY COUNT  
				DS 5 ;N/A  
				DS 1 ;RDADR:'MUST FIND' COUNT  
				DS 1 ;READ,WRITE: CHECKSUM  
CSSTV			 DS 4 ;RDADR:CKSUM,SEC,TRK,VOL  
MONTIMEL		 EQU CSSTV+2 ;MSWAIT:MOTOR-ON TIME  
MONTIMEH		 EQU MONTIMEL+1   
BUF				 DS 2 ;PRENIB,POSTNIB:USER BUFFER  
				DS 1 ;SEEK:PRIOR PHASE  
TRKN			 DS 1 ;SEEK:TARGET TRACK  
*     
* LOCAL TEMPS:     
*     
				ORG $D0 ;WE'RE ALLOWED TO $FF  
BLKTEMP			 DS 2 ;LOCAL TEMP FOR BLKNUMBER  
BUFTEMP			 DS 2 ;LOCAL TEMP FOR BUFFER ADDRESS  
TRACK			 DS 1 ;LOCAL TEMP FOR TRACK  
SECTOR			 DS 1 ;LOCAL TEMP FOR SECTOR  
RETRYADR		 DS 1 ;LOCAL TEMP FOR SECTOR-FIND RETRIES  
RETRYCNT		 DS 1 ;LOCAL TEMP FOR I/O RETRIES  
RECALCNT		 DS 1 ;LOCAL TEMP FOR RECAL COUNT  
BLKCOUNT		 DS 1 ;BLKS REQD TO SATISFY BYTECOUNT  
SEEKWAIT		 DS 1 ;<>0 IF SEEK DELAY NEEDED  
IRQMASK			 DS 1 ;ENTRY 'I' BIT  
TEMP			 DS 1 ;JUST A TEMP  
				DEND    
				PAGE    
* DRIVER INTERFACE AREA:    
*    
DSECT			    
ORG				 $C0   
D.COMMAND		 DS 1 ;COMMAND CODE  
D.UNITNUM		 DS 1 ;UNIT NUMBER  
D.BUFL			 DS 2 ;BUFFER ADDRESS  
D.BUFH			 EQU D.BUFL+1   
D.STATCODE		 EQU D.BUFL ;DSTATUS CODE  
D.STATBUF		 EQU D.BUFH ;^DSTATUS LIST  
D.BYTES			 DS 2 ;BYTECOUNT  
D.BLOCK			 DS 2 ;REQUESTED BLOCKNUM  
D.BYTRD			 DS 2 ;BYTES READ (READ)  
DS				 6 ;SPARES (OK AS TEMPS)  
DEND			    
				PAGE   
DIB1			 EQU *  ;DIB FOR .D1  
				DW DIB2  ;FLINK  
				DW MAIN  ;ENTRY POINT  
				DFB 3  ;NAME LENGTH  
				ASC '.D1 '   
				DFB $80  ;DEVNUM: ACTIVE  
				DFB 0  ;SLOT  
				DFB 0  ;UNIT NUMBER  
				DFB $E1,1,0  ;TYPE,SUB,FILLER  
				DW 280  ;BLOCKCOUNT  
				DW 1  ;MANUFACTURER=APPLE  
				DW $1100  ;VERSION=1.1  
*      
DIB2			 EQU *  ;DIB FOR .D2  
				DW DIB3  ;FLINK  
				DW MAIN  ;ENTRY POINT  
				DFB 3  ;NAME LENGTH  
				ASC '.D2 '   
				DFB $80  ;DEVNUM: ACTIVE  
				DFB 0  ;SLOT  
				DFB 1  ;UNIT NUMBER  
				DFB $E1,1,0  ;TYPE,SUB,FILLER  
				DW 280  ;BLOCKCOUNT  
				DW 1  ;MANUFACTURER=APPLE  
				DW $1100  ;VERSION=1.1  
*      
DIB3			 EQU *  ;DIB FOR .D3  
				DW DIB4  ;FLINK  
				DW MAIN  ;ENTRY POINT  
				DFB 3  ;NAME LENGTH  
				ASC '.D3 '   
				DFB $80  ;DEVNUM: ACTIVE  
				DFB 0  ;SLOT  
				DFB 2  ;UNIT NUMBER  
				DFB $E1,1,0  ;TYPE,SUB,FILLER  
				DW 280  ;BLOCKCOUNT  
				DW 1  ;MANUFACTURER=APPLE  
				DW $1100  ;VERSION=1.1  
*      
DIB4			 EQU *  ;DIB FOR .D4  
				DW 0  ;NO FLINK  
				DW MAIN  ;ENTRY POINT  
				DFB 3  ;NAME LENGTH  
				ASC '.D4 '   
				DFB $80  ;DEVNUM: ACTIVE  
				DFB 0  ;SLOT  
				DFB 3  ;UNIT NUMBER  
				DFB $E1,1,0  ;TYPE,SUB,FILLER  
				DW 280  ;BLOCKCOUNT  
				DW 1  ;MANUFACTURER=APPLE  
				DW $1100  ;VERSION=1.1  
				DW 1  ;MANUFACTURER=APPLE  
				DW $1100  ;VERSION=1.1  
				     
				CHN DISK3.MAIN.SRC    
				INCLUDE SOSORG,6,1,254    
				     
*************************************************************************  
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: DISK3.SRC  
*************************************************************************  
				 
				 
*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.13\sos.s.disk3.txt
LOAD /A3OSX.BUILD/SOS.13/sos.s
ASM

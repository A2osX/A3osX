NEW
  AUTO 3,1
*--------------------------------------
*************************************************************************  
* APPLE /// SOS 1.3 SOURCE CODE FILE: OPRMSG.SRC  
*************************************************************************  
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT  
				 
SBTL			 "SOS 1.1 OPERATOR MESSAGE/REPLY"  
REL				  
INCLUDE			 SOSORG,6,1,254  
ORG				 ORGOMSG  
ZZORG			 EQU *  
MSB				 OFF  
REP				 60  
*  
* COPYRIGHT (C) APPLE COMPUTER INC. 1981  
* ALL RIGHTS RESERVED  
*  
REP				 60  
*  
* THIS MODULE CONTAINS THE BLOCK FILE MANAGERS'S OPERATOR  
* INTERFACE. IT DISPLAYS A MESSAGE IN A FOUR LINE BY  
* FOURTY COLUMN WINDOW, THEN WAITS FOR THE USER TO TOGGLE  
* THE ALPHA-LOCK KEY BEFORE RETURNING.  
*  
* THE VERTICAL BLANKING FLAGS AND COMPOSITE BLANKING  
* TIMER ARE USED TO MAINTAIN THE DISPLAY. MEMORY PAGE  
* $02 IS USED FOR TEMPORARY STORAGE. ON EXIT, ALL  
* RESOURCES ARE RESTORED TO THEIR PREVIOUS STATES.  
*  
* ENTRY POINT: OPMSGRPLY  
*  
* PARAMETERS: X -- MESSAGE ADDRESS (LOW BYTE)  
* Y -- MESSAGE ADDRESS (HIGH BYTE)  
* (THE MESSAGE MUST RESIDE IN THE CURRENT BANK)  
*  
* RESULT: A -- RESPONSE KEYSTROKE  
* X, Y -- UNDEFINED  
*  
REP				 60  
*  
*  
ENTRY			 OPMSGRPLY  
*  
EXTRN			 SCRNMODE  
PAGE			  
*  
* HARDWARE EQUATES  
*  
Z.REG			 EQU $FFD0  
E.REG			 EQU $FFDF  
*    
KBPORT			 EQU $C008  
*    
BELL			 EQU $C040  
*    
VM0				 EQU $C050  
VM1				 EQU $C052  
VM2				 EQU $C054  
VM3				 EQU $C056  
*    
E.T2			 EQU $FFE8  
E.ACR			 EQU $FFEB  
E.PCR			 EQU $FFEC  
E.IFR			 EQU $FFED  
E.IER			 EQU $FFEE  
*    
* ZERO PAGE DECLARATIONS  
*  
DSECT			  
ZPBASE			 EQU $200   
				ORG $0000 ;ZERO PAGE DECLARATIONS  
MSGPTR			 DS 2 ;MESSAGE POINTER  
MSGIDX			 DS 1   
*     
SCRNIDX			 DS 1   
SCRNPTR			 DS 2   
DATAPTR			 DS 2   
DATABUF			 DS 160  
*    
SV.ZREG			 DS 1  
SV.EREG			 DS 1  
SV.SMODE		 DS 1  
SV.EACR			 DS 1  
SV.EPCR			 DS 1  
SV.EIER			 DS 1  
*    
FLAG			 DS 1  
				DEND   
				PAGE   
OPMSGRPLY		 EQU *  
*    
*    
* SAVE CURRENT VALUES AND SET UP ZERO PAGE,  
* ENVIRONMENT, SCREEN MODE, AND E.6522 REGISTERS.  
*  
PHP				    
SEI				    
LDA				 Z.REG   
STA				 ZPBASE+SV.ZREG ;SAVE ZERO PAGE  
LDA				 #<ZPBASE   
STA				 Z.REG   
STX				 MSGPTR ;SAVE MESSAGE ADDRESS  
STY				 MSGPTR+1   
LDA				 E.REG   
STA				 SV.EREG ;SAVE ENVIRONMENT  
AND				 #$5F   
ORA				 #$40   
STA				 E.REG ;SCREEN OFF, I/O SPACE ON  
LDA				 SCRNMODE   
STA				 SV.SMODE ;SAVE SCREEN MODE  
LDA				 #$00   
STA				 SCRNMODE   
BIT				 VM0 ;SET 40 COLUMN  
BIT				 VM1 ; BLACK & WHITE TEXT  
BIT				 VM2   
BIT				 VM3   
LDX				 E.ACR   
TXA				    
AND				 #$20   
STA				 SV.EACR ;SAVE AUXILIARY CONTROL REG  
TXA				    
ORA				 #$20   
STA				 E.ACR ;SET UP BL TIMER  
LDX				 E.PCR   
TXA				    
AND				 #$F0   
STA				 SV.EPCR ;SAVE PERIPHERAL CONTROL REG  
TXA				    
AND				 #$0F   
ORA				 #$60   
STA				 E.PCR ;SET UP VBL FLAGS  
LDA				 E.IER   
AND				 #$38   
STA				 E.IER ;MASK VBL & BL INTERRUPTS  
STA				 SV.EIER ;SAVE INTERRUPT MASKS  
PLP				    
*    
*    
* SAVE SCREEN DATA AND CLEAR MESSAGE WINDOW  
*  
				LDX #3   
OPR010			 JSR SETPTRS   
				LDY #39   
OPR020			 LDA (SCRNPTR),Y ;SAVE SCREEN DATA  
				STA (DATAPTR),Y   
				LDA #$A0   
				STA (SCRNPTR),Y ;BLANK SCREEN  
				DEY    
				BPL OPR020   
				DEX    
				BPL OPR010   
*     
*     
* MOVE MESSAGE TO WINDOW    
*     
				BIT BELL   
				LDX #$00   
				STX MSGIDX   
OPR100			 JSR SETPTRS   
				LDY #$00   
				STY SCRNIDX   
OPR110			 LDY MSGIDX   
				INC MSGIDX   
				LDA (MSGPTR),Y ;SET UP MESSAGE  
				BEQ OPR110   
				BMI OPR200   
				CMP #$0D   
				BEQ OPR120   
				LDY SCRNIDX   
				INC SCRNIDX   
				ORA #$80   
				STA (SCRNPTR),Y   
				CPY #39   
				BCC OPR110   
OPR120			 INX    
				CPX #4   
				BCC OPR100   
*  
*  
* DISPLAY MESSAGE UNTIL ALPHA-LOCK KEY TOGGLES  
*  
OPR200			 LDY #2  
				LDA KBPORT  
				AND #$08  
				STA FLAG  
OPR210			 JSR VIDEO  
				LDA KBPORT  
				AND #$08  
				CMP FLAG  
				BEQ OPR210  
				STA FLAG  
				DEY   
				BNE OPR210  
*  
*  
* RESTORE PREVIOUS CONTENTS OF WINDOW  
*  
				LDX #3  
OPR400			 JSR SETPTRS  
				LDY #39  
OPR410			 LDA (DATAPTR),Y  
				STA (SCRNPTR),Y  
				DEY   
				BPL OPR410  
				DEX   
				BPL OPR400  
*  
*  
* RESTORE E.6522, SCREEN MODE, ENVIRONMENT, & ZERO PAGE  
* THEN RETURN TO CALLER  
*  
PHP				  
SEI				  
				LDA E.ACR   
				AND #$DF   
				ORA SV.EACR ;RESTORE AUXILIARY CONTROL REG  
				STA E.ACR   
				LDA E.PCR   
				AND #$0F   
				ORA SV.EPCR ;RESTORE PERIPHERAL CONTROL REG  
				STA E.PCR   
				LDA SV.EIER ;RESTORE INTERRUPT ENABLE REG  
				ORA #$80   
				STA E.IER   
				LDA SV.SMODE ;RESTORE SCREEN MODE  
				STA SCRNMODE   
				LSR A   
				BCC OPR500   
				BIT VM0+1 ;RESTORE VIDEO MODE  
OPR500			 LSR A   
				BCC OPR510   
				BIT VM1+1   
OPR510			 LSR A   
				BCC OPR520   
				BIT VM2+1   
OPR520			 BIT SCRNMODE   
				BVC OPR530   
				BIT VM3+1   
OPR530			 LDA SV.EREG ;RESTORE ENVIRONMENT  
STA				 E.REG   
LDA				 SV.ZREG ;RESTORE ZERO PAGE  
STA				 Z.REG   
PLP				    
RTS				    
PAGE			    
REP				 60   
*  
* SUBROUTINE VIDEO  
*  
* THIS SUBROUTINE POLLS THE VERTICAL-BLANKING AND  
* COMPOSITE-BLANKING-TIMER FLAGS AND TURNS THE SCREEN  
* OFF AND ON SO THAT ONLY THE MESSAGE WINDOW WILL BE  
* DISPLAYED.  
*  
* THE E.6522 MUST BE INITIALIZED SO THAT E.CB2 FLAGS THE  
* POSITIVE EDGE OF VBL AND E.T2 COUNTS BL PULSES. THE  
* INTERRUPTS MUST BE MASKED AND THE PROPER COUNT MUST  
* ALREADY BE STORED IN THE LOW ORDER BYTE OF E.T2.  
*  
* ENTRY: VIDEO  
*  
* PARAMETERS: INTERRUPT SYSTEM DISABLED  
*  
* EXIT: A -- UNDEFINED  
* X, Y -- PRESERVED  
*  
REP				 60  
*  
VIDEO			 EQU *  
LDA				 E.IFR  
AND				 #$28 ;GET VBL & BL FLAGS  
BEQ				 VID030  
STA				 E.IFR ;CLEAR FLAGS  
AND				 #$20 ;WHICH FLAG?  
BNE				 VID010 ; BL  
*  
LDA				 #$1F  
STA				 E.T2 ;SET UP BL TIMER  
LDA				 #$00  
STA				 E.T2+1  
LDA				 E.REG  
ORA				 #$20 ;SET UP FOR SCREEN ON  
SEC				  
BCS				 VID020  
*  
VID010			 LDA E.REG  
AND				 #$DF ;SET UP FOR SCREEN OFF  
CLC				  
*  
VID020			 STA E.REG  
LDA				 #$00  
ROR				 A  
STA				 SCRNMODE  
VID030			 RTS  
PAGE			  
REP				 60  
*  
* SUBROUTINE SETPTRS  
*  
* THIS SUBROUTINE SETS UP THE POINTERS TO THE MESSAGE  
* WINDOW AND DATA SAVE AREA.  
*  
* ENTRY: SETPTRS  
*  
* PARAMETERS: X -- LINE NUMBER [0..3]  
*  
* EXIT: A -- UNDEFINED  
* X, Y -- PRESERVED  
*  
REP				 60  
*  
SETPTRS			 EQU *  
TXA				  
LSR				 A  
ORA				 #$04  
STA				 SCRNPTR+1  
LDA				 #$00  
ROR				 A  
STA				 SCRNPTR  
LDA				 #<DATABUF  
				STA DATAPTR+1   
				LDA DBUFADR,X   
				STA DATAPTR   
				RTS    
*     
DBUFADR			 EQU *   
				DFB >0*40+DATABUF   
				DFB >1*40+DATABUF   
				DFB >2*40+DATABUF   
				DFB >3*40+DATABUF   
				LST ON   
				    
ZZEND			 EQU *   
ZZLEN			 EQU ZZEND-ZZORG   
				IFNE ZZLEN-LENOMSG   
				FAIL 2,"SOSORG FILE IS INCORRECT FOR OPRMSG"  
				FIN    
				    
*************************************************************************  
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: OPRMSG.SRC  
*************************************************************************  
				 
				 
*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.13\sos.s.oprmsg.txt
LOAD /A3OSX.BUILD/SOS.13/sos.s
ASM

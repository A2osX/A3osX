NEW
  AUTO 3,1
*--------------------------------------
* SOS SYSTEM GLOBAL DATA & EQUATES  
*  
* THIS MODULE CONTAINS THE SOS JUMP TABLE, AND ALL GLOBAL  
* DATA AND EQUATES. THE JUMP TABLE, AND ALL DATA THAT IS  
* TO BE REFERENCED BY DEVICE HANDLERS, ARE ASSIGNED FIXED  
* ADDRESSES AT THE BEGINNING OF MEMORY PAGE $19. DATA  
* THAT IS ONLY REFERENCED BY SOS BEGINS $1980, BUT MAY BE  
* MOVED WHENEVER SOS IS RELINKED.  
  
*				.OR $18FC  

				.DA SYSGLOB 			;SYSGLOB TARGET ADDRESS  
				.DA $0100 				; AND LENGTH  
  
* SYSTEM GLOBAL DATA  
* (ACCESSIBLE TO SOS AND DEVICE HANDLERS)  
  
SYSGLOB			.EQ *   
     
MEMSIZE			.DA #$08 				;MEMORY SIZE = 128K  
SYSBANK			.DA #$02 				;SYSTEM BANK = 2  
SUSPFLSH		.DA #$00 				;SYSOUT SUSPEND/FLUSH FLAG  
NMIFLAG			.DA #$00 				;NMI PENDING FLAG  
				.DA NMIEXIT 			;DEFAULT NMI VECTOR  
SCRNMODE		.DA #$80 				;CURRENT SCREEN MODE  
GRSIZE			.DA #$00   
*     
* SOS JUMP TABLE    
*    
				.BS SYSGLOB+$10-*,$00 	; USED BY THE MOUSE DRIVER  

USERNMI			jmp NMIEXIT 			;KEYBOARD NMI VECTOR  
				jmp ALLOCSIR 			;ALLOCATE A SIR  
				jmp DEALCSIR 			;DEALLOCATE A SIR  
				jmp NMIDSBL 			;DISABLE NMI  
				jmp NMIENBL 			;ENABLE NMI  
				jmp QUEEVENT 			;QUEUE AN EVENT  
				jmp SELC800 			;SELECT I/O EXPANSION ROM  
				jmp SYSDEATH 			;SYSTEM DEATH  
				jmp SYSERR 				;SOS ERROR  
				jmp REQBUF 				;REQUEST BUFFER  
				jmp GETBUFADR 			;GET BUFFER'S ADDRESS  
				jmp RELBUF 				;RELEASE BUFFER  
				jmp CLRBMASK 			;VECTOR TO CLRBMASK  
*  
* SOS DATA AND EQUATES  
* (ACCESSIBLE ONLY TO SOS)  
*  
				.BS SYSGLOB+$80-*,$00   
SERR			.DA #$00 				;SYSTEM ERROR CODE  
*     
DBUGBRK			nop  					;TO ENABLE DEBUG BREAK POINTS,  
				pla  					; PATCH THESE BYTES TO  
				pla  					; JMP TO THE DEBUGGER  
				rts    
*     
KYBDNMI			jmp USERNMI   
				jmp NMIDBUG   

NMISPSV			.DA #0   
				jmp NMICONT   

NMIEXIT			rts    
*     
*     
SOSVER			.AS "SOS 1.3 01-DEC-82"  
SOSVERL			.EQ *-SOSVER   
*     
				.AS "(C) 1980, 1981 BY APPLE COMPUTER INC."  
*     
E1908			.EQ $1908 				; ALLOCATED TO STEPHEN SMITH (MOUSE DRIVER)  
* ABOVE SET AND RESET IN DISK DRIVER  
SZPAGE			.EQ $1800 				;SYSTEM ZERO PAGE  
SXPAGE			.EQ $1400 				;SYSTEM EXTEND PAGE  
SSPAGE			.EQ $0100 				;SYSTEM STACK PAGE  
*     
CZPAGE			.EQ $1A00 				;CALLER'S ZERO PAGE  
CXPAGE			.EQ $1600 				;CALLER'S EXTEND PAGE  
CSPAGE			.EQ $1B00 				;CALLER'S STACK PAGE  

CEVPRI			.DA #$00 				;CALLER'S EVENT PRIORITY  
*     
SIRTEMP			.DA #$00 				;TEMP FOR ALLOCSIR & DEALCSIR  
SIRARGSIZ		.DA #$00 				;ARGUMENT COUNT FOR ALLOCSIR & DEALCSIR  
IRQCNTR			.DA $0000 				;FALSE IRQ COUNTER  
NMICNTR			.DA $0000 				;COUNTER FOR NMILOCK  
QEVTEMP			.DA #$00 				;TEMP FOR QUEEVENT  
QEV.THIS		.DA #$00 				;POINTER FOR QUEEVENT  
QEV.LAST		.DA #$00 				;POINTER FOR QUEEVENT  
*     
SOSQUIT			.DA COLDSTRT   
BACKMASK		.DA #BACKBIT 			; MASK USED BY BFM TO UPDATE BACKUP BIT  
*     
* TO CLEAR THE BACKUP BIT, A PROGRAM MUST JSR TO CLRBMASK THRU 1934 THEN DO A
* SET-FILE-INFO WITH NO INTERVENING SOS CALLS. ANY SOS CALL WILL
* SET BACKMASK AGAIN. THIS FEATURE IS INTENTIONALLY LEFT UNDOCUMENTED.
*
CLRBMASK		and #BACKBIT 			; PURIFY  
				sta BACKMASK 			; SET THE MASK  
				rts  					; AND BACK TO THE CALLER  
*  
* SYSTEM DEATH REGISTER SAVE AREA  
* (SYSTEM STACK MOVED TO $1700-$17FF)  
*  
				.BS SYSGLOB+$F6-*,$00   

SDEATH.REGS		.DA #$00 				;BANK  
				.DA #$00 				;ZERO PAGE  
				.DA #$00 				;ENVIRONMENT  
				.DA #$00 				;Y  
				.DA #$00 				;X  
				.DA #$00 				;A  
				.DA #$00 				;STATUS  
				.DA $00 				;PROGRAM COUNTER  
				.DA #$00 				;STACK POINTER  

				.DUMMY
				.OR SYSGLOB+$100   
				.DA $B800 				;KERNEL TARGET ADDRESS  
				.DA $47C0 				; AND LENGTH  
				.ED
*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.13/sos.s.sysglob
LOAD /A3OSX.BUILD/SOS.13/sos.s
ASM

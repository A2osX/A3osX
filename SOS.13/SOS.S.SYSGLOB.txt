NEW
  AUTO 3,1
*--------------------------------------
*************************************************************************  
* APPLE /// SOS 1.3 SOURCE CODE FILE: SYSGLOB.SRC  
*************************************************************************  
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT  
				 
SBTL			 "SOS 1.1 GLOBAL EQUATES"  
REL				  
ORG				 $18FC  
MSB				 OFF  
REP				 60  
* COPYRIGHT (C) APPLE COMPUTER INC. 1980  
* ALL RIGHTS RESERVED  
REP				 60  
*  
* SOS SYSTEM GLOBAL DATA & EQUATES  
*  
* THIS MODULE CONTAINS THE SOS JUMP TABLE, AND ALL GLOBAL  
* DATA AND EQUATES. THE JUMP TABLE, AND ALL DATA THAT IS  
* TO BE REFERENCED BY DEVICE HANDLERS, ARE ASSIGNED FIXED  
* ADDRESSES AT THE BEGINNING OF MEMORY PAGE $19. DATA  
* THAT IS ONLY REFERENCED BY SOS BEGINS $1980, BUT MAY BE  
* MOVED WHENEVER SOS IS RELINKED.  
*  
REP				 60  
*  
EXTRN			 ALLOCSIR  
EXTRN			 DEALCSIR  
EXTRN			 NMIDSBL  
EXTRN			 NMIENBL  
EXTRN			 QUEEVENT  
EXTRN			 SELC800  
EXTRN			 SYSDEATH  
EXTRN			 SYSERR  
EXTRN			 REQBUF  
EXTRN			 GETBUFADR  
EXTRN			 RELBUF  
EXTRN			 NMIDBUG  
EXTRN			 NMICONT  
EXTRN			 COLDSTRT  
*  
*  
ENTRY			 MEMSIZE  
ENTRY			 SYSBANK  
ENTRY			 SUSPFLSH  
ENTRY			 NMIFLAG  
ENTRY			 SCRNMODE  
ENTRY			 GRSIZE  
*  
ENTRY			 SERR  
ENTRY			 DBUGBRK  
ENTRY			 KYBDNMI  
ENTRY			 NMISPSV  
ENTRY			 SDEATH.REGS  
*  
ENTRY			 SOSVER  
ENTRY			 SOSVERL  
*  
ENTRY			 SZPAGE  
ENTRY			 SXPAGE  
ENTRY			 SSPAGE  
*  
ENTRY			 CZPAGE  
ENTRY			 CXPAGE  
ENTRY			 CSPAGE  
ENTRY			 CEVPRI  
*  
ENTRY			 SIRTEMP  
ENTRY			 SIRARGSIZ  
ENTRY			 IRQCNTR  
ENTRY			 NMICNTR  
ENTRY			 QEVTEMP  
ENTRY			 QEV.THIS  
ENTRY			 QEV.LAST  
*  
ENTRY			 BADBRK  
ENTRY			 BADINT1  
ENTRY			 BADINT2   
ENTRY			 NMIHANG   
ENTRY			 EVQOVFL   
ENTRY			 STKOVFL   
ENTRY			 BADSYSCALL   
ENTRY			 DEV.OVFLOW   
ENTRY			 MEM2SML   
ENTRY			 VCBERR   
ENTRY			 FCBERR   
ENTRY			 ALCERR   
ENTRY			 DIRERR   
ENTRY			 TOOLONG   
ENTRY			 BADBUFNUM   
ENTRY			 BADBUFSIZ   
ENTRY			 BITMAPADR   
*    
ENTRY			 BADSCNUM   
ENTRY			 BADCZPAGE   
ENTRY			 BADXBYTE   
ENTRY			 BADSCPCNT   
ENTRY			 BADSCBNDS   
*    
ENTRY			 NODNAME   
ENTRY			 BADDNUM   
*    
ENTRY			 BADPATH   
ENTRY			 CFCBFULL   
ENTRY			 FCBFULL   
ENTRY			 BADREFNUM   
ENTRY			 PATHNOTFND   
ENTRY			 VNFERR   
ENTRY			 FNFERR   
ENTRY			 DUPERR   
ENTRY			 OVRERR   
ENTRY			 DIRFULL   
ENTRY			 CPTERR   
ENTRY			 TYPERR   
ENTRY			 EOFERR   
ENTRY			 POSNERR   
ENTRY			 ACCSERR   
ENTRY			 BTSERR   
ENTRY			 FILBUSY   
ENTRY			 NOTSOS   
ENTRY			 BADLSTCNT   
ENTRY			 OUTOFMEM   
ENTRY			 BUFTBLFULL   
ENTRY			 BADSYSBUF   
ENTRY			 DUPVOL   
ENTRY			 NOTBLKDEV   
ENTRY			 LVLERR   
*    
ENTRY			 BADJMODE   
*    
ENTRY			 BADBKPG   
ENTRY			 SEGRQDN   
ENTRY			 SEGTBLFULL   
ENTRY			 BADSEGNUM   
ENTRY			 SEGNOTFND   
ENTRY			 BADSRCHMODE   
ENTRY			 BADCHGMODE   
ENTRY			 BADPGCNT   
*    
ENTRY			 XREQCODE   
ENTRY			 XCTLCODE   
ENTRY			 XCTLPARM   
ENTRY			 XNOTOPEN   
ENTRY			 XNOTAVAIL   
ENTRY			 XNORESRC   
ENTRY			 XBADOP   
ENTRY			 XIOERROR   
ENTRY			 XNODRIVE   
ENTRY			 XNOWRITE   
ENTRY			 XBYTECNT   
ENTRY			 XBLKNUM   
ENTRY			 XDISKSW   
ENTRY			 BACKMASK ; MASK BYTE FOR BACKUP BIT.  
*    
ENTRY			 E1908 ; DISK DRIVER IS READING/WRITING (SET) ELSE NOT (RESET)  
*    
PAGE			    
DW				 SYSGLOB ;SYSGLOB TARGET ADDRESS  
DW				 $0100 ; AND LENGTH  
*  
* SYSTEM GLOBAL DATA  
* (ACCESSIBLE TO SOS AND DEVICE HANDLERS)  
*  
SYSGLOB			 EQU *   
*     
MEMSIZE			 DFB $08 ;MEMORY SIZE = 128K  
SYSBANK			 DFB $02 ;SYSTEM BANK = 2  
SUSPFLSH		 DFB $00 ;SYSOUT SUSPEND/FLUSH FLAG  
NMIFLAG			 DFB $00 ;NMI PENDING FLAG  
				DW NMIEXIT ;DEFAULT NMI VECTOR  
SCRNMODE		 DFB $80 ;CURRENT SCREEN MODE  
GRSIZE			 DFB $00   
*     
*     
* SOS JUMP TABLE    
*    
DS				 SYSGLOB+$10-*,$00 ; USED BY THE MOUSE DRIVER  
USERNMI			 JMP NMIEXIT ;KEYBOARD NMI VECTOR  
				JMP ALLOCSIR ;ALLOCATE A SIR  
				JMP DEALCSIR ;DEALLOCATE A SIR  
				JMP NMIDSBL ;DISABLE NMI  
				JMP NMIENBL ;ENABLE NMI  
				JMP QUEEVENT ;QUEUE AN EVENT  
				JMP SELC800 ;SELECT I/O EXPANSION ROM  
				JMP SYSDEATH ;SYSTEM DEATH  
				JMP SYSERR ;SOS ERROR  
				JMP REQBUF ;REQUEST BUFFER  
				JMP GETBUFADR ;GET BUFFER'S ADDRESS  
				JMP RELBUF ;RELEASE BUFFER  
				JMP CLRBMASK ;VECTOR TO CLRBMASK  
				PAGE    
*  
* SOS DATA AND EQUATES  
* (ACCESSIBLE ONLY TO SOS)  
*  
				DS SYSGLOB+$80-*,$00   
SERR			 DFB $00 ;SYSTEM ERROR CODE  
*     
DBUGBRK			 NOP  ;TO ENABLE DEBUG BREAK POINTS,  
				PLA  ; PATCH THESE BYTES TO  
				PLA  ; JMP TO THE DEBUGGER  
				RTS    
*     
KYBDNMI			 JMP USERNMI   
				JMP NMIDBUG   
NMISPSV			 DFB 0   
				JMP NMICONT   
NMIEXIT			 RTS    
*     
*     
SOSVER			 ASC "SOS 1.3 01-DEC-82"  
SOSVERL			 EQU *-SOSVER   
*     
ASC				 "(C) 1980, 1981 BY APPLE COMPUTER INC."  
*     
E1908			 EQU $1908 ; ALLOCATED TO STEPHEN SMITH (MOUSE DRIVER)  
* ABOVE SET AND RESET IN DISK DRIVER  
SZPAGE			 EQU $1800 ;SYSTEM ZERO PAGE  
SXPAGE			 EQU $1400 ;SYSTEM EXTEND PAGE  
SSPAGE			 EQU $0100 ;SYSTEM STACK PAGE  
*     
CZPAGE			 EQU $1A00 ;CALLER'S ZERO PAGE  
CXPAGE			 EQU $1600 ;CALLER'S EXTEND PAGE  
CSPAGE			 EQU $1B00 ;CALLER'S STACK PAGE  
CEVPRI			 DFB $00 ;CALLER'S EVENT PRIORITY  
*     
SIRTEMP			 DFB $00 ;TEMP FOR ALLOCSIR & DEALCSIR  
SIRARGSIZ		 DFB $00 ;ARGUMENT COUNT FOR ALLOCSIR & DEALCSIR  
IRQCNTR			 DW $0000 ;FALSE IRQ COUNTER  
NMICNTR			 DW $0000 ;COUNTER FOR NMILOCK  
QEVTEMP			 DFB $00 ;TEMP FOR QUEEVENT  
QEV.THIS		 DFB $00 ;POINTER FOR QUEEVENT  
QEV.LAST		 DFB $00 ;POINTER FOR QUEEVENT  
*     
SOSQUIT			 DS COLDSTRT   
BACKMASK		 DFB BACKBIT ; MASK USED BY BFM TO UPDATE BACKUP BIT  
*     
* TO CLEAR THE BACKUP BIT, A PROGRAM MUST JSR TO CLRBMASK THRU 1934 THEN DO A
* SET-FILE-INFO WITH NO INTERVENING SOS CALLS. ANY SOS CALL WILL
* SET BACKMASK AGAIN. THIS FEATURE IS INTENTIONALLY LEFT UNDOCUMENTED.
*
CLRBMASK		 AND #BACKBIT ; PURIFY  
				STA BACKMASK ; SET THE MASK  
				RTS  ; AND BACK TO THE CALLER  
				PAGE    
*  
* SYSTEM DEATH REGISTER SAVE AREA  
* (SYSTEM STACK MOVED TO $1700-$17FF)  
*  
				DS SYSGLOB+$F6-*,$00   
SDEATH.REGS		 EQU *   
				DFB $00 ;BANK  
				DFB $00 ;ZERO PAGE  
				DFB $00 ;ENVIRONMENT  
				DFB $00 ;Y  
				DFB $00 ;X  
				DFB $00 ;A  
				DFB $00 ;STATUS  
				DW $00 ;PROGRAM COUNTER  
				DFB $00 ;STACK POINTER  

ORG				 SYSGLOB+$100   
DW				 $B800 ;KERNEL TARGET ADDRESS  
DW				 $47C0 ; AND LENGTH  
				   
*************************************************************************
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: SYSGLOB.SRC
*************************************************************************


*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.13\sos.s.sysglob.txt
LOAD /A3OSX.BUILD/SOS.13/sos.s
ASM

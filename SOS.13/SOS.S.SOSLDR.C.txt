NEW
  AUTO 3,1
*--------------------------------------
*************************************************************************  
* APPLE /// SOS 1.3 SOURCE CODE FILE: SOSLDR.C.SRC  
*************************************************************************  
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT  
				 
				PAGE  
				REP 100  
*   
* SUBROUTINES:   
*   
* SOSLDR "MAIN PROGRAM"  
*   
* SOSLDR1 "PROCESSES KERNEL/INTERPRETER/DRIVER FILES"  
*    
* (1) MOVE "MOVES SRC.P..SRC.P+CNT-1 TO DST.P..DST.P+CNT-1"  
*    
* INIT.KRNL "CALLS KERNEL INITIALIZATION MODULES"  
*    
* WELCOME "PRINTS WELCOME MESSAGE ("APPLE ///", VERSION, DATE/TIME, COPYRIGHT)  
*    
* ADVANCE "ADVANCES WRK.PTR TO NEXT INTERP/KERNEL MODULE. INITS SRC.P, DST.P, CNT FOR MOVE"  
*    
* REVERSE "REVERSES TITLE/CODE/RELOC COUNTS TO ALLOW DRIVER FILE TO BE PROCESSED FM BACK TO FRONT"  
*    
* DADVANCE "ADVANCES WORK.P TO NEXT DRIVER MODULE. INITS SRC.P, CNT, REL.P FOR MOVE"  
*    
* DADD "ADVANCES WORK.P TO NEXT DRIVER FIELD"  
*    
* FLAGS "PROCESSES "INACTIVE" & "PAGE ALIGN" FLAGS IN DRIVER MODULE'S DIBS"  
*    
* NEXT.DIB "ADVANCES TO NEXT DIB IN DRIVER MODULE"  
*    
* GETMEM "COMPUTES DESTINATION BASE ADDRESS FOR NEXT DRIVER MODULE"  
*    
* NEWDST "COMPUTES DESTINATION BASE ADDRESS, ALIGNING ON PAGE BOUNDARY IF REQUESTED"  
;				  
;				  
;				  
;				  
;				  
;				  
*    
* BUILD.DSEG "COMPUTES # OF PAGES TO ADD TO DRIVER SEGMENT AND WHETHER TO BEGIN A NEW SEGMENT"  
*    
* RELOC "RELOCATES DRIVER MODULE'S CODE FIELD USING RELOCATION FIELD"  
*    
* (1) LINK "LINKS FIRST DIB TO PREVIOUS DRIVER'S LAST "ACTIVE" DIB, AND ADDS SDT ENTRY"  
*    
* SET.DRIVES "INITIALIZES DIB LINKS IN KERNEL'S FLOPPY DRIVER"  
*    
* (1) ALLOC.DEV "ADDS A NEW ENTRY TO THE DEVICE MANAGER'S SYSTEM DEVICE TABLE (SDT)"  
*    
* ALLOC.SEG "ALLOCATES SEGMENTS FOR KERNEL, INTERPRETER AND SYSTEM WORK AREA"  
*    
* RSEG "CALLS MEMORY MANAGER TO ALLOCATE SEGMENTS FOR THE KERNEL AND INTERPRTER"  
*    
* ALLOC.DSEG "ALLOCATES SEGMENTS FOR DRIVER MODULES"  
*    
* ERROR "DISPLAYS ERROR MESSAGE, SOUNDS BELL AND LOOPS UNTIL CONTROL/RESET PRESSED"  
*    
* (1) - INDICATES THAT THE ROUTINE PERFORMS BANK SWITCHING AND MUST(!) BE OUTSIDE THE 32K RAM BANKS.  
REP				 100  
PAGE			  
REP				 100  
*  
* SOS.KERNEL FILE FORMAT  
*  
* (8) LABEL <---+  
* = "SOS KRNL" !  
* !  
* (2) HEADER COUNT !  
* HEADER !  
* = # OF FLOPPY DRIVES ! CONTAINED IN THIS LISTING  
* = INTERPRETER PATHNAME !  
* = DRIVER PATHNAME !  
* !  
* (4) ADR & COUNT !  
* SOSLDR CODE <---+  
*  
* (4) ADR & COUNT  
* GLOBALS  
*  
---------------------------------+
* (2) DM #N TITLE COUNT <---+ ! RELOCATION FIELD FORMAT !  
*  TITLE FIELD ! ! ----------------------- !  
* (2) DM #N CODE COUNT ! DRIVER MODULE #N ! CONSISTS OF A LIST OF 2 BYTE POINTERS !  
*  CODE FIELD ! ! WHICH POINT TO THE LOW BYTE OF A TWO !  
* (2) DM #N RELOC COUNT ! ! BYTE QUANTITY TO BE RELOCATED. !  

---------------------------------+
*   
* SOSLDR - EXTERNAL DECLARATIONS   
*   
REP				 100   
EXTRN			 SYSBANK   
EXTRN			 MEMSIZE   
EXTRN			 SCRNMODE   
* (4) ADR & COUNT   
* KERNEL CODE   
*   
REP				 100  
*   
* SOS.INTERP FILE FORMAT   
*   
* (8) LABEL   
* = "SOS NTRP"   
*   
* (2) HEADER COUNT   
*   
* (4) ADR & COUNT   
* INTERPRETER CODE   
*   
REP				 100  
*   
* SOS.DRIVER FILE FORMAT   
*   
* (8) LABEL   
* = "SOS DRVR"   
*   
* (2) HEADER COUNT   
* = # OF FLOPPY DRIVES  
* = CHARACTER SET TABLE  
* = KEYBOARD TABLE  
* ...  
*  
* RELOC FIELD  
* ...  
*   
* $FFFF = THE END  
*   
REP				 100  
PAGE			   
REP				 100  
EXTRN			 SOSVER   
EXTRN			 SOSVERL   
*   
EXTRN			 INT.INIT ; (IPL) INTERRUPT INIT  
EXTRN			 EVQ.INIT ; (IPL) EVENT QUEUE INIT  
EXTRN			 DMGR.INIT ; DEVICE MANAGER INIT  
EXTRN			 MAX.DNUM ; "  
EXTRN			 SDT.SIZE   
EXTRN			 SDT.DIBL   
EXTRN			 SDT.DIBH   
EXTRN			 SDT.ADRL   
EXTRN			 SDT.ADRH   
EXTRN			 SDT.BANK   
EXTRN			 SDT.UNIT   
EXTRN			 BLKD.SIZE   
EXTRN			 BLKDLST   
EXTRN			 CFMGR.INIT ; CHAR FILE MANAGER INIT  
EXTRN			 MMGR.INIT ; MEMORY MANAGER INIT  
EXTRN			 BMGR.INIT ; BUFFER FILE MANAGER INIT  
EXTRN			 BFM.INIT ; BLOCK FILE MANAGER INIT  
EXTRN			 BFM.INIT2 ; BLOCK FILE MANAGER INIT2  
EXTRN			 CLK.INIT ; CLOCK SYSTEM CALL INIT  
*   
EXTRN			 DIB1 ; ON BOARD DISK DRIVER'S DIBS (1-4)  
EXTRN			 DIB2   
EXTRN			 DIB3   
EXTRN			 DIB4   
*  
*ENTRY I.BASE.P ; USED BY BFM.INIT2 (HARDWIRED!)  
PAGE			  
REP				 100  
*  
* FILE DATA DECLARATIONS  
				REP 100   
* KERNEL FILE     
				REP 100   
K.FILE			 ASC "SOS KRNL"   
K.HDR.CNT		 DW LDR.ADR-K.DRIVES   
K.DRIVES		 DFB $1   
K.FLAGS			 DFB $0 ; RESERVED FOR FUTURE USE  
I.PATH			 DFB $E   
				ASC ".D1/SOS.INTERP"   
				DS $30-$F   
D.PATH			 DFB $E   
				ASC ".D1/SOS.DRIVER"   
				DS $30-$F   
LDR.ADR			 DW $0   
LDR.CNT			 DW ZZEND-SOSLDR   
				REP 100   
* INTERPRETER/DRIVER FILES<--+
* ERROR MESSAGES!DEFINED IN BACK OF THIS LISTING
* WELCOME MESSAGES<--+
EP100
AGE
EP100
*
* SOSLDR - DATA DECLARATIONS (1)
*
				REP 100  
TRUE			 EQU $80  
FALSE			 EQU $0  
*    
Z.REG			 EQU $FFD0  
E.REG			 EQU $FFDF  
B.REG			 EQU $FFEF  
*    
CZPAGE			 EQU $1A00  
CSPAGE			 EQU $1B00  
CXPAGE			 EQU $1600  
SZPAGE			 EQU $1800  
SXPAGE			 EQU $1400  
SSPAGE			 EQU $0100  
*    
ROM.ADR			 EQU $F1B9  
ROM.ID			 EQU $A0  
				PAGE   
				REP 100  
*  
* SOSLDR - DATA DECLARATIONS (2)  
*  
				REP 100    
ZPAGE			 EQU $00    
*      
K.BASE			 EQU ZPAGE+$0 ; SOSLDR1 SUBROUTINE +--------------------------------------+  
I.BASE.P		 EQU ZPAGE+$2 ; ! <VARNAME>.P ::= 3 BYTE ZPAGE POINTER !  
RDBUF.P			 EQU ZPAGE+$4 ; +--------------------------------------+  
SYSBUF.P		 EQU ZPAGE+$6    
TEMP.BANK		 EQU ZPAGE+$8    
TEMP.ADRH		 EQU ZPAGE+$9    
WORK.P			 EQU ZPAGE+$A    
*      
REV.SAVE		 EQU ZPAGE+$C ; REVERSE SUBROUTINE   
*      
FIRST.ADIB		 EQU ZPAGE+$10 ; FLAGS SUBROUTINE   
PREV.ADIB.P		 EQU ZPAGE+$12    
DIB.P			 EQU ZPAGE+$14    
PG.ALIGN		 EQU ZPAGE+$16    
DIB.FLAGS		 EQU $14    
DIB.DCB			 EQU $20    
*      
PREVBANK		 EQU ZPAGE+$18 ; GETMEM SUBROUTINE   
PREVDST			 EQU ZPAGE+$19    
*      
CODE.P			 EQU ZPAGE+$1C ; RELOCATION SUBROUTINE   
REL.P			 EQU ZPAGE+$1E    
REL.END			 EQU ZPAGE+$20    
*      
SRC.P			 EQU ZPAGE+$22 ; MOVE SUBROUTINE   
DST.P			 EQU ZPAGE+$24    
CNT				 EQU ZPAGE+$26    
*      
DSTBANK			 EQU ZPAGE+$2A ; LINK SUBROUTINE   
LINK.P			 EQU ZPAGE+$2C    
DIB.ENTRY		 EQU 2 ; ALLOC.DEV SUBROUTINE  
DIB.UNIT		 EQU 4+16+2   
DIB.DTYPE		 EQU 4+16+3   
*     
ETEMP			 EQU ZPAGE+$2E ; ERROR SUBROUTINE  
*     
WTEMP			 EQU ZPAGE+$2F ; WELCOME SUBROUTINE  
				    
*************************************************************************  
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: SOSLDR.C.SRC  
*************************************************************************  
				 
				 

*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.13\sos.s.sosldr.c.txt
LOAD /A3OSX.BUILD/SOS.13/sos.s
ASM

NEW
AUTO 3,1
*--------------------------------------

*************************************************************************
* APPLE /// SOS 1.3 SOURCE CODE FILE: DISK3.USEL.SRC
*************************************************************************
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT

* PAGE
* REP 40
* NAME : UNITSEL
* FUNCTION: SELECT & START A DRIVE,
* SET UP MOTOR & SEEK DELAYS
* INPUT : NONE
* OUTPUT : MONTIME,SEEKTIME
* DESTROYS: ALL REGISTERS
* REP 40
*
UNITSEL			.eq *
				ldy D.UNITNUM ;GET DRIVENUM
				lda #0 ;ASSUME NO SEEKWAIT
				sta SEEKWAIT ; WILL BE NEEDED
				sta MONTIMEL ;CLEAR MONTIME
				sta MONTIMEH
*
* SEE IF MOTOR(S) STILL SPINNING:
*
				jsr CHKDRV ;MOTOR(S) POWERED UP?
				bne SPINNING ;=>YES. WHO IS IT?
*
* NO MOTOR(S) SPINNING. DESELECT
* ALL MOTORS AND START AFRESH:
*
				ldx MD.INT ;DESELECT ALL
				lda #0 ;SHOW INTERNAL AS
				sta DRIVESEL+0 ; NOT SELECTED
				sta UPTIME+0 ;INDICATE DRIVE IS FULLY STOPPED
				jsr EXTDESEL ;DESELECT ALL EXTERNALS TOO
				jmp SETTIME ;GO SETUP MOTOR DELAY
* REP 40
* MOTOR(S) SPINNING: OURS?
*
SPINNING		.eq *
				lda DRIVESEL,Y ;HAD WE BEEN SELECTED?
				bne GOFORIT ;=>YES, GO FOR IT RIGHT AWAY.
*
* WE AREN'T SPINNING. SHUTDOWN ANOTHER
* DRIVE, IF NECESSARY, TO GET GOING:
*
				cpy #0 ;ARE WE THE INTERNAL DRIVE?
				beq SETTIME ;=>YES, LEAVE EXT MOTOR ALONE
*
* WE'RE AN EXTERNAL DRIVE. STOP ALL EXTERNAL MOTORS
* UNCONDITIONALLY, BUT LEAVE THE INTERNAL MOTOR ALONE.
* IF WE *DID* HAVE TO STOP ANOTHER EXTERNAL, THEN
* MAKE SURE WE SET THE CORRECT PRE-SEEK DELAY!
*
				lda #0 ;SEE IF ANOTHER EXTERNAL
				ora DRIVESEL+3 ; HAD BEEN
				ora DRIVESEL+2 ; SELECTED
				ora DRIVESEL+1 ; BEFORE...
				beq SETTIME ;=>NO, SEEK DELAY IS UNNECESSARY
				inc SEEKWAIT ;YES, DELAY BEFORE STEPPING
				jsr EXTDESEL ;DESELECT ALL EXTERNALS
				jmp SETTIME ;=>GO SETUP MOTOR DELAY
* PAGE
* REP 40
* OUR DRIVE IS SPINNING. GO FOR IT!
* DEPENDING OF HOW LONG THE MOTOR'S BEEN ON,
* THIS COMMAND MAY REQUIRE A MOTOR DELAY.
*
GOFORIT			.eq *
				ldx D.COMMAND ;GET CURRENT COMMAND
				lda MTIMES,X ;GET REQUIRED UPTIME FOR IT
				sec 
				sbc UPTIME,Y ;DRIVE RUNNING LONG ENOUGH?
				bcs SELECT ;=>NO, AC NOW HAS DELTA-T
				lda #0 ;OTHERWISE, WAIT=0
				jmp SELECT ;SET MONTIME & SELECT DRIVE

* REP 40
*
* ALL MOTORS WERE OFF. CHOOSE THE
* APPROPRIATE MOTOR-ON TIME:
*
SETTIME			.eq *
				lda #0 ;INDICATE THAT
				sta UPTIME,Y ; THE DRIVE WAS OFF
				ldx D.COMMAND ;GET CURRENT COMMAND
				lda MTIMES,X ;GET CORRECT DELAY TIME
* REP 40
*
* SELECT THE DRIVE & START IT:
*
SELECT			.eq *
				sta MONTIMEH ;NEGATE IT BECAUSE
				lda #0 ; IT GETS INCREMENTED
				sec ; INSTEAD OF
				sbc MONTIMEH ; DECREMENTED
				sta MONTIMEH ;STUFF MOTOR DELAY
				cpy #1 ;ARE WE THE INTERNAL DRIVE?
				bcs SELEXT ;=>NO, AN EXTERNAL
				lda IS.INT ;I/O SELECT INTERNAL
				lda MS.INT ;MOTOR SELECT INTERNAL
				jmp UNITRET ;=>ALL DONE!
*
SELEXT			.eq *
				lda IS.EXT ;I/O SELECT EXTERNAL
				cpy #2 ;ARE WE 2, 3, OR 4 ?
				bcs NOTD2 ;=>DEFINITELY 3 OR 4
				lda MD.EXT1 ;MOTOR SELECT
				lda MS.EXT2 ; ONLY .D2
				jmp UNITRET ;=>ALL DONE!
*
NOTD2			.eq *
				bne ISD4 ;=>DEFINITELY NOT 3
				lda MS.EXT1 ;MOTOR SELECT
				lda MD.EXT2 ; ONLY .D3
				jmp UNITRET ;=>ALL DONE!
*
ISD4			.eq *
				lda MS.EXT1 ;MOTOR SELECT
				lda MS.EXT2 ; ONLY .D4
*
*
UNITRET			.eq *
				lda MOTORON ;PROVIDE MOTOR POWER
				lda #1 ;SAY WE'VE SELECTED
				sta DRIVESEL,Y ; THIS DRIVE
*
* IF WE HAVE MOTORTIME TO BURN,
* THEN DELAY 50 MS. THIS ENSURES
* A GOOD SOLID CHKDRV AFTER
* TURNING ON THE MOTOR.
*
				lda MONTIMEH ;ANY MOTORTIME?
				bpl UNITRTS ;=>NO, WE GO FOR IT.
				ldy #5 ;5*10 MS
UNITDEL			.eq *
				lda #100 ;100*100US IS 10MS
				jsr MSWAIT
				dey 
				bne UNITDEL
				lda #2 ;INCLUDE THE 50MS
				jsr ADDTIME ; IN MOTOR UPTIME(S)
UNITRTS			.eq *
				rts 
* SKP 5
* REP 40
* NAME : EXTDESEL
* FUNCTION: DESELECT ALL EXTERNAL DRIVE MOTORS
* INPUT : NONE
* DESTROYS: AC,X
* REP 40
*
EXTDESEL		.eq *
				lda MD.EXT1 ;DESELECT ALL EXTERNAL
				lda MD.EXT2 ; DRIVE MOTORS
				ldx #3 ;SHOW THAT THEY ARE
				lda #0 ; ARE ALL DEAD DUCKS
EDS1			sta DRIVESEL,X

				sta UPTIME,X ;DRIVE MOTORS ARE OFF
				dex 
				bne EDS1
				rts 

* CHN DISK3.SUBS.SRC

*************************************************************************
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: DISK3.USEL.SRC
*************************************************************************




*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS.ORIG/SOS.S.DISK3.USL
LOAD /A3OSX.BUILD/SOS.ORIG/SOS.S
ASM

NEW
AUTO 3,1
*--------------------------------------

*************************************************************************
* APPLE /// SOS 1.3 SOURCE CODE FILE: SYSERR.SRC
*************************************************************************
* ASSEMBLER: APPLE ][ 6502 ASSEMBLER from APPLE COMPUTER TOOLKIT

*				.TI "SOS 1.1 SYSTEM ERROR ROUTINES"
* REL
* INCLUDE SOSORG,6,1,254
				.ph ORGSERR FIXME: check if we need this
ZZORG			.eq *
* FIXME - MSB OFF
* REP 60
* COPYRIGHT (C) APPLE COMPUTER INC. 1980
* ALL RIGHTS RESERVED
* REP 60
*
* SYSTEM ERROR ROUTINES (VERSION = 1.1O )
* (DATE = 12/02/81)
*
* THIS MODULE CONTAINS THE SYSTEM ERROR AND SYSTEM FAILURE ROUTINES.
*
* REP 60
*
* ENTRY SYSERR
* ENTRY SYSDEATH
*
* EXTRN SERR
* EXTRN SDEATH.REGS
* EXTRN SCRNMODE
* PAGE
* REP 60
*
* DATA DECLARATIONS
*
* REP 60
*
* E.REG EQU $FFDF
* Z.REG EQU $FFD0
* B.REG EQU $FFEF
*
S.SAVE			.eq $09 ; REGISTER SAVE AREA
PCH.SAVE		.eq $08
PCL.SAVE		.eq $07
P.SAVE			.eq $06
A.SAVE			.eq $05
X.SAVE			.eq $04
Y.SAVE			.eq $03
E.SAVE			.eq $02
Z.SAVE			.eq $01
B.SAVE			.eq $00
*
NMI.VECTOR		.eq $FFFA
*
TXT.CLR			.eq $C050
MIX.CLR			.eq $C052
HIRES.CLR		.eq $C056
*
PG2.CLR			.eq $C054
*
MSGBASE			.eq $7E4
MSGBASE2		.eq $BE4
MSG			.as ' SYSTEM FAILURE = $'
MSGLEN			.eq *-MSG
* PAGE
* REP 60
*
* SYSTEM ERROR ROUTINE
*
* THIS ROUTINE IS CALLED WHEN AN ERROR CONDITION HAS BEEN
* ENCOUNTERED. THE ERROR NUMBER IS PASSED IN THE A REG
* AND THE CALL TO THIS ROUTINE MUST ALWAYS BE A JSR.
*
* REP 60
SYSERR			.eq *
*
				sta SERR

				pla 
				sta SDEATH.REGS+PCL.SAVE
				pla 
				sta SDEATH.REGS+PCH.SAVE
				sec 
				lda SERR
				bne SERR.EXIT
				clc 
SERR.EXIT		rts ; RETURNS ONE LEVEL BEYOND CALLER
* PAGE
* REP 60
*
* SYSTEM DEATH ROUTINE
*
* CALLED TO IMMEDIATELY TERMINATE EXECUTION OF THE MACHINE
* BECAUSE A FATAL ERROR HAS BEEN DETECTED BY THE OPERATING
* SYSTEM. THE ERROR CODE IS PASSED IN THE A REG. THE
* CALL TO THIS ROUTINE MUST ALWAYS BE A JSR.
*
* REP 60
SYSDEATH		.eq *
*
				sta SDEATH.REGS+A.SAVE ; SAVE REGISTERS
				stx SDEATH.REGS+X.SAVE
				sty SDEATH.REGS+Y.SAVE
				php 
				pla 
				sta SDEATH.REGS+P.SAVE
				tsx 
				stx SDEATH.REGS+S.SAVE
				lda E.REG
				sta SDEATH.REGS+E.SAVE
				lda Z.REG
				sta SDEATH.REGS+Z.SAVE
				lda B.REG
				sta SDEATH.REGS+B.SAVE
				pla 
				sta SDEATH.REGS+PCL.SAVE
				pla 
				sta SDEATH.REGS+PCH.SAVE
*
				sei ; TURN OFF INTERRUPTS
				cld 
*
				ldx #0 ; SAVE SYSTEM STACK PAGE IN PAGE $17
SD005			lda $100,X
				sta $1700,X
				dex 
				bne SD005
*
				lda $C059 ; ENSURE SILENTYPE PORT SHUT DOWN
				lda $C0DD
				lda $C0DF
				lda $C05F
				lda $C05A
*
				lda $C040 ; SOUND BELL
*
				lda #$74 ; ENSURE RESET LOCK OFF & RAM SWITCHED IN.
				sta E.REG
*
				lda TXT.CLR ; SWITCH TO 40 COL B&W DISPLAY MODE
				lda MIX.CLR
				lda HIRES.CLR
				lda PG2.CLR ; & SELECT PAGE 1
*
				lda #$02
				bit SCRNMODE
				bvs SD015 ; IF GRAPHICS MODE THEN KEEP 40 COL MODE
				beq SD015 ; IF 40 COL MODE THEN KEEP
				lda MIX.CLR+1 ; ELSE SWITCH TO 80 COL DISPLAY MODE
*
				ldx #MSGLEN+1 ; ENSURE BKGRND SET TO INVERSE SPACES
				lda #$20 ; SPACE CHAR W/INVERSE
SD010			sta MSGBASE2-1,X
				dex 
				bpl SD010
*
SD015			ldx #0 ; MOVE MSG TO TEXT SCREEN
SD020			lda MSG,X
				sta MSGBASE-1,X

				inx 
				cpx #MSGLEN
				bne SD020
*
				lda SDEATH.REGS+A.SAVE ; DISPLAY ERROR CODE (2 HEX DIGITS)
				clc 
				lsr
				lsr
				lsr
				lsr
				jsr PRINT ; FIRST DIGIT
				inx 
				lda SDEATH.REGS+A.SAVE
				and #$0F
				jsr PRINT ; SECOND DIGIT
*
				lda #SD100
				sta NMI.VECTOR
				lda /SD100
				sta NMI.VECTOR+1
*
*
				jmp * ; HANG UNTIL REBOOT (CTRL/RESET)
* REP 60
SD100			rti ; NMI VECTOR POINT HERE TO MASK THEM OUT
*
*
* PRINT SUBROUTINE
*
PRINT			.eq *
				cmp #$A
				bcs PRNT100
				adc #$30 ; "0"-"9"
				bcc PRNT110 ; ALWAYS TAKEN
PRNT100			adc #$36 ; "A"-"F"
PRNT110			sta MSGBASE-1,X
				rts 
*
* LST ON
ZZEND			.eq *
ZZLEN			.eq ZZEND-ZZORG
* IFNE ZZLEN-LENSERR
* FAIL 2,"SOSORG FILE IS INCORRECT FOR SYSERR"
* FIN

*************************************************************************
* END OF APPLE /// SOS 1.3 SOURCE CODE FILE: SYSERR.SRC
*************************************************************************




*--------------------------------------
MAN
SAVE /A3OSX.BUILD/SOS/SOS.S.SYSERR
LOAD /A3OSX.BUILD/SOS/SOS.S
ASM
